function solution(s) {
  const table = {};

  return [...s].map((char, index) => {
    // if (!table[char]) 은 table[char]가 0일 수도 있으니 잘못된 조건이다.
    // table[char] === undefined 로 하거나 아래와 같이 key가 있는지 in 연산자를 사용해야한다.
    if (!(char in table)) {
      table[char] = index;
      return -1;
    }
    const interval = index - table[char];
    table[char] = index;
    return interval;
  });
}

// 정확성  테스트
// 테스트 1 〉	통과 (0.07ms, 33.4MB)
// 테스트 2 〉	통과 (0.11ms, 33.5MB)
// 테스트 3 〉	통과 (0.19ms, 33.5MB)
// 테스트 4 〉	통과 (0.22ms, 33.6MB)
// 테스트 5 〉	통과 (1.28ms, 36.6MB)
// 테스트 6 〉	통과 (0.54ms, 37.1MB)
// 테스트 7 〉	통과 (2.11ms, 36.3MB)
// 테스트 8 〉	통과 (0.40ms, 37.1MB)
// 테스트 9 〉	통과 (1.27ms, 36.5MB)
// 테스트 10 〉	통과 (0.28ms, 33.7MB)
// 테스트 11 〉	통과 (1.20ms, 36.4MB)
// 테스트 12 〉	통과 (0.07ms, 33.5MB)
// 테스트 13 〉	통과 (0.06ms, 33.5MB)
// 테스트 14 〉	통과 (0.15ms, 33.5MB)
// 테스트 15 〉	통과 (0.06ms, 33.6MB)
// 테스트 16 〉	통과 (0.09ms, 33.5MB)
// 테스트 17 〉	통과 (0.10ms, 33.5MB)
// 테스트 18 〉	통과 (0.36ms, 33.8MB)
// 테스트 19 〉	통과 (0.30ms, 33.8MB)
// 테스트 20 〉	통과 (0.15ms, 33.5MB)
// 테스트 21 〉	통과 (0.15ms, 33.6MB)
// 테스트 22 〉	통과 (0.57ms, 37.3MB)
// 테스트 23 〉	통과 (0.15ms, 33.7MB)
// 테스트 24 〉	통과 (0.20ms, 33.5MB)
// 테스트 25 〉	통과 (0.26ms, 33.5MB)
// 테스트 26 〉	통과 (0.12ms, 33.5MB)
// 테스트 27 〉	통과 (0.17ms, 33.5MB)
// 테스트 28 〉	통과 (0.26ms, 33.6MB)
// 테스트 29 〉	통과 (0.06ms, 33.4MB)
// 테스트 30 〉	통과 (1.33ms, 36.5MB)
