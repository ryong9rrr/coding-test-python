function solution(t, p) {
  const LENGTH = p.length;
  const targetNumber = Number(p);

  let count = 0;

  for (let i = 0; i < t.length - LENGTH + 1; i += 1) {
    const number = Number(t.slice(i, i + LENGTH));
    if (number <= targetNumber) {
      count += 1;
    }
  }

  return count;
}

// 정확성  테스트
// 테스트 1 〉	통과 (0.46ms, 33.5MB)
// 테스트 2 〉	통과 (1.12ms, 33.6MB)
// 테스트 3 〉	통과 (1.00ms, 33.5MB)
// 테스트 4 〉	통과 (1.02ms, 33.7MB)
// 테스트 5 〉	통과 (0.74ms, 33.6MB)
// 테스트 6 〉	통과 (2.44ms, 36.6MB)
// 테스트 7 〉	통과 (3.93ms, 37.2MB)
// 테스트 8 〉	통과 (0.88ms, 33.6MB)
// 테스트 9 〉	통과 (0.30ms, 33.6MB)
// 테스트 10 〉	통과 (0.14ms, 33.1MB)
// 테스트 11 〉	통과 (0.71ms, 33.6MB)
// 테스트 12 〉	통과 (1.58ms, 33.9MB)
// 테스트 13 〉	통과 (0.99ms, 33.7MB)
// 테스트 14 〉	통과 (0.68ms, 33.5MB)
// 테스트 15 〉	통과 (1.15ms, 33.6MB)
// 테스트 16 〉	통과 (0.60ms, 33.6MB)
// 테스트 17 〉	통과 (2.18ms, 33.7MB)
// 테스트 18 〉	통과 (1.73ms, 33.7MB)
// 테스트 19 〉	통과 (0.34ms, 33.4MB)
// 테스트 20 〉	통과 (0.27ms, 33.5MB)
// 테스트 21 〉	통과 (0.12ms, 33.5MB)
// 테스트 22 〉	통과 (0.22ms, 33.4MB)
// 테스트 23 〉	통과 (0.51ms, 33.6MB)
// 테스트 24 〉	통과 (0.13ms, 33.4MB)
// 테스트 25 〉	통과 (0.14ms, 33.5MB)
// 테스트 26 〉	통과 (0.13ms, 33.5MB)
// 테스트 27 〉	통과 (0.18ms, 33.6MB)
// 테스트 28 〉	통과 (0.21ms, 33.4MB)
// 테스트 29 〉	통과 (0.16ms, 33.4MB)
// 테스트 30 〉	통과 (0.38ms, 33.5MB)
// 테스트 31 〉	통과 (0.07ms, 33.5MB)
// 테스트 32 〉	통과 (0.06ms, 33.4MB)
// 테스트 33 〉	통과 (0.07ms, 33.4MB)
// 테스트 34 〉	통과 (0.12ms, 33.6MB)
// 테스트 35 〉	통과 (0.18ms, 33.4MB)
// 테스트 36 〉	통과 (0.15ms, 33.4MB)
// 테스트 37 〉	통과 (0.13ms, 33.5MB)
// 테스트 38 〉	통과 (0.17ms, 33.4MB)
