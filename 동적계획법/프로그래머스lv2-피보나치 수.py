# 타뷸레이션
def solution(n):
    if n <= 1:
        return n
    
    dp = [0] * (n + 1)
    dp[1] = 1
    
    for i in range(2, n + 1):
        dp[i] = (dp[i - 2] + dp[i - 1]) % 1234567
    
    return dp[-1]

"""
정확성  테스트
테스트 1 〉	통과 (0.01ms, 10.1MB)
테스트 2 〉	통과 (0.01ms, 10.1MB)
테스트 3 〉	통과 (0.01ms, 10.1MB)
테스트 4 〉	통과 (0.01ms, 10MB)
테스트 5 〉	통과 (0.01ms, 10.2MB)
테스트 6 〉	통과 (0.01ms, 10.1MB)
테스트 7 〉	통과 (0.40ms, 10MB)
테스트 8 〉	통과 (0.15ms, 10.2MB)
테스트 9 〉	통과 (0.10ms, 10.1MB)
테스트 10 〉	통과 (0.57ms, 10.2MB)
테스트 11 〉	통과 (0.13ms, 10.2MB)
테스트 12 〉	통과 (0.19ms, 10MB)
테스트 13 〉	통과 (21.02ms, 13.7MB)
테스트 14 〉	통과 (33.49ms, 13.6MB)
"""

# 메모리 절약
def solution(n):
    x, y = 0, 1
    for i in range(n):
        x, y = y, (x + y) % 1234567
    
    return x
"""
정확성  테스트
테스트 1 〉	통과 (0.00ms, 10.1MB)
테스트 2 〉	통과 (0.01ms, 10.1MB)
테스트 3 〉	통과 (0.01ms, 10.3MB)
테스트 4 〉	통과 (0.00ms, 10.2MB)
테스트 5 〉	통과 (0.01ms, 10.1MB)
테스트 6 〉	통과 (0.00ms, 10.1MB)
테스트 7 〉	통과 (0.19ms, 10.3MB)
테스트 8 〉	통과 (0.12ms, 10.1MB)
테스트 9 〉	통과 (0.02ms, 10.3MB)
테스트 10 〉	통과 (0.12ms, 10.1MB)
테스트 11 〉	통과 (0.05ms, 10.1MB)
테스트 12 〉	통과 (0.07ms, 10.1MB)
테스트 13 〉	통과 (13.35ms, 10.1MB)
테스트 14 〉	통과 (7.66ms, 10.1MB)
"""