"""
빈 병 2개(a)를 가져다주면 콜라 1병(b)을 준다.
빈 병 20개(n)를 가져다주면 몇 병을 받을 수 있는가?
(단, 보유 중인 빈 병이 2개(a) 미만이면 콜라를 받을 수 없다.)

<콜라 cycle>
    n        새로운 콜라, 현재 가지고 있는 빈병      
빈 병 20개 -> 콜라 10병, 빈 병 0개
빈 병 10개 -> 콜라 5병, 빈 병 0개
빈 병 5개 -> 콜라 2병, 빈 병 1개
빈 병 3개 -> 콜라 1병, 빈 병 1개
빈 병 2개 -> 콜라 1병, 빈 병 1개
빈 병 1개 -> 끝

1. 즉 n이 a와 같거나 크다면
2. 새로운 콜라는 n // a * b 개를 받게 되고 이를 newCoke라하자.
3. 빈 병은 n % a 개이다. 그리고 이를 emptyCoke라 할 때
4. 다음 cycle에서 가지고 있는 빈 병의 개수 n은 newCoke + emptyCoke개이다.
5. 그렇다면 답은 매번 갱신되는 newCoke의 누적합이다.
"""

def solution(a, b, n):
    total = 0
    while n >= a:
        newCoke = n // a * b
        emptyCoke = n % a
        total += newCoke
        n = newCoke + emptyCoke
    return total
"""
정확성  테스트
테스트 1 〉	통과 (0.01ms, 10.2MB)
테스트 2 〉	통과 (0.00ms, 10.1MB)
테스트 3 〉	통과 (0.01ms, 10.1MB)
테스트 4 〉	통과 (0.00ms, 10.2MB)
테스트 5 〉	통과 (0.00ms, 10.2MB)
테스트 6 〉	통과 (0.00ms, 10.1MB)
테스트 7 〉	통과 (0.00ms, 10.3MB)
테스트 8 〉	통과 (0.00ms, 10.3MB)
테스트 9 〉	통과 (0.00ms, 10.2MB)
테스트 10 〉	통과 (0.00ms, 10MB)
테스트 11 〉	통과 (0.00ms, 10.1MB)
테스트 12 〉	통과 (0.34ms, 10.4MB)
테스트 13 〉	통과 (0.00ms, 10.2MB)
테스트 14 〉	통과 (0.00ms, 10.1MB)
"""